<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="800" viewBox="0 0 1200 800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="bg-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#667eea;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#764ba2;stop-opacity:1" />
    </linearGradient>
  </defs>
  
  <!-- Background -->
  <rect width="100%" height="100%" fill="url(#bg-gradient)"/>
  
  <!-- Title -->
  <text x="600" y="80" text-anchor="middle" font-size="42" font-weight="bold" fill="white">🗂️ PHP File Browser</text>
  <text x="600" y="120" text-anchor="middle" font-size="20" fill="rgba(255,255,255,0.9)">Interactive Directory Navigator</text>
  
  <!-- Main container -->
  <rect x="100" y="160" width="1000" height="550" rx="20" fill="rgba(255,255,255,0.95)" stroke="rgba(255,255,255,0.3)" stroke-width="2"/>
  
  <!-- Preview Grid -->
  <g transform="translate(150, 220)">
    <!-- Folder icon -->
    <rect width="200" height="140" rx="12" fill="linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%)" stroke="#667eea" stroke-width="2"/>
    <text x="100" y="80" text-anchor="middle" font-size="36">📁</text>
    <text x="20" y="115" font-size="14" font-weight="bold" fill="#333">Documents</text>
    <text x="20" y="130" font-size="11" fill="#666">Directory</text>
    
    <!-- File 1 -->
    <g transform="translate(250, 0)">
      <rect width="200" height="140" rx="12" fill="white" stroke="#ddd" stroke-width="2"/>
      <text x="100" y="80" text-anchor="middle" font-size="36">🐘</text>
      <text x="20" y="115" font-size="14" font-weight="bold" fill="#333">files.php</text>
      <text x="20" y="130" font-size="11" fill="#666">15.2 KB • PHP</text>
    </g>
    
    <!-- File 2 -->
    <g transform="translate(500, 0)">
      <rect width="200" height="140" rx="12" fill="white" stroke="#ddd" stroke-width="2"/>
      <text x="100" y="80" text-anchor="middle" font-size="36">🌐</text>
      <text x="20" y="115" font-size="14" font-weight="bold" fill="#333">index.html</text>
      <text x="20" y="130" font-size="11" fill="#666">8.4 KB • HTML</text>
    </g>
    
    <!-- File 3 -->
    <g transform="translate(750, 0)">
      <rect width="200" height="140" rx="12" fill="white" stroke="#ddd" stroke-width="2"/>
      <text x="100" y="80" text-anchor="middle" font-size="36">📜</text>
      <text x="20" y="115" font-size="14" font-weight="bold" fill="#333">script.js</text>
      <text x="20" y="130" font-size="11" fill="#666">5.1 KB • JS</text>
    </g>
    
    <!-- Bottom row -->
    <g transform="translate(125, 180)">
      <rect width="200" height="140" rx="12" fill="white" stroke="#ddd" stroke-width="2"/>
      <text x="100" y="80" text-anchor="middle" font-size="36">🎨</text>
      <text x="20" y="115" font-size="14" font-weight="bold" fill="#333">style.css</text>
      <text x="20" y="130" font-size="11" fill="#666">3.2 KB • CSS</text>
    </g>
    
    <g transform="translate(375, 180)">
      <rect width="200" height="140" rx="12" fill="white" stroke="#ddd" stroke-width="2"/>
      <text x="100" y="80" text-anchor="middle" font-size="36">📄</text>
      <text x="20" y="115" font-size="14" font-weight="bold" fill="#333">readme.md</text>
      <text x="20" y="130" font-size="11" fill="#666">2.1 KB • MD</text>
    </g>
    
    <g transform="translate(625, 180)">
      <rect width="200" height="140" rx="12" fill="white" stroke="#ddd" stroke-width="2"/>
      <text x="100" y="80" text-anchor="middle" font-size="36">⚙️</text>
      <text x="20" y="115" font-size="14" font-weight="bold" fill="#333">config.json</text>
      <text x="20" y="130" font-size="11" fill="#666">1.5 KB • JSON</text>
    </g>
  </g>
  
  <!-- Instructions -->
  <text x="600" y="750" text-anchor="middle" font-size="16" fill="rgba(255,255,255,0.9)">💡 Open in browser with PHP for interactive navigation</text>
  <text x="600" y="775" text-anchor="middle" font-size="12" fill="rgba(255,255,255,0.7)">Static SVG Preview Mode</text>
</svg>

<?php
// ============= INTERACTIVE PHP MODE =============
// Sprawdź czy to żądanie interaktywne (z przeglądarki z PHP)
if (isset($_GET['dir']) || isset($_GET['navigate']) || (isset($_SERVER['HTTP_USER_AGENT']) && strpos($_SERVER['HTTP_USER_AGENT'], 'Mozilla') !== false)) {
    // Tryb interaktywny - zwróć HTML
    header('Content-Type: text/html; charset=UTF-8');

    // Konfiguracja
    $directory = isset($_GET['dir']) ? realpath($_GET['dir']) : realpath('./');
    if (!$directory || !is_dir($directory)) {
        $directory = realpath('./');
    }

    $allowed_extensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'pdf', 'txt', 'php', 'js', 'html', 'css', 'json', 'xml', 'md'];

    // Funkcja do sprawdzania czy plik jest obrazem
    function isImage($file) {
        $image_extensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg'];
        $extension = strtolower(pathinfo($file, PATHINFO_EXTENSION));
        return in_array($extension, $image_extensions);
    }

    // Funkcja do generowania ikony pliku
    function getFileIcon($file) {
        $extension = strtolower(pathinfo($file, PATHINFO_EXTENSION));
        $icons = [
            'pdf' => '📄', 'txt' => '📝', 'php' => '🐘', 'js' => '📜',
            'html' => '🌐', 'css' => '🎨', 'zip' => '📦', 'mp3' => '🎵',
            'mp4' => '🎬', 'doc' => '📄', 'xls' => '📊', 'json' => '⚙️',
            'xml' => '📋', 'md' => '📖'
        ];
        return isset($icons[$extension]) ? $icons[$extension] : '📁';
    }

    // Skanowanie katalogu - pliki i foldery
    $files = [];
    $directories = [];

    if (is_dir($directory)) {
        $scan = scandir($directory);
        foreach ($scan as $item) {
            if ($item === '.') continue;

            $itemPath = $directory . '/' . $item;

            if ($item === '..') {
                // Folder nadrzędny
                $parentDir = dirname($directory);
                if ($parentDir !== $directory) {
                    $directories[] = [
                        'name' => '⬆️ ..',
                        'path' => $parentDir,
                        'is_parent' => true
                    ];
                }
            } elseif (is_dir($itemPath)) {
                // Katalog
                $directories[] = [
                    'name' => '📁 ' . $item,
                    'path' => $itemPath,
                    'is_parent' => false
                ];
            } elseif (is_file($itemPath)) {
                // Plik
                $extension = strtolower(pathinfo($item, PATHINFO_EXTENSION));
                if (in_array($extension, $allowed_extensions) || empty($extension)) {
                    $files[] = [
                        'name' => $item,
                        'path' => $itemPath,
                        'size' => filesize($itemPath),
                        'modified' => filemtime($itemPath),
                        'is_image' => isImage($item),
                        'extension' => $extension ?: 'file',
                        'icon' => getFileIcon($item)
                    ];
                }
            }
        }
    }

    // Sortowanie
    usort($directories, function($a, $b) {
        if ($a['is_parent']) return -1;
        if ($b['is_parent']) return 1;
        return strcmp($a['name'], $b['name']);
    });
    usort($files, function($a, $b) { return strcmp($a['name'], $b['name']); });

    // Breadcrumb - ścieżka nawigacji
    $pathParts = explode('/', str_replace('\\', '/', $directory));
    $breadcrumbs = [];
    $currentPath = '';
    foreach ($pathParts as $part) {
        if (!empty($part)) {
            $currentPath .= '/' . $part;
            $breadcrumbs[] = [
                'name' => $part,
                'path' => $currentPath
            ];
        }
    }

    echo '<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Przeglądarka plików SVG - ' . htmlspecialchars(basename($directory)) . '</title>
    <style>
        body {
            margin: 0;
            padding: 20px;
            font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e0e0e0;
        }
        .header h1 {
            color: #333;
            margin: 0 0 10px 0;
            font-size: 2.5em;
        }
        .breadcrumb {
            margin: 20px 0;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
            font-size: 14px;
        }
        .breadcrumb a {
            color: #667eea;
            text-decoration: none;
            margin-right: 5px;
        }
        .breadcrumb a:hover {
            text-decoration: underline;
        }
        .breadcrumb span {
            color: #666;
            margin: 0 5px;
        }
        .controls {
            margin-bottom: 30px;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
            flex-wrap: wrap;
        }
        .controls input {
            padding: 10px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            min-width: 300px;
        }
        .controls button {
            padding: 10px 20px;
            background: #667eea;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.3s;
        }
        .controls button:hover {
            background: #5a6fd8;
        }
        .stats {
            text-align: center;
            margin-bottom: 20px;
            color: #666;
            font-size: 1.1em;
        }
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        .file-item, .dir-item {
            background: white;
            border-radius: 12px;
            padding: 15px;
            text-align: center;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.2s ease-in-out;
            cursor: pointer;
            border: 2px solid transparent;
            position: relative;
            will-change: transform, box-shadow, border-color;
        }
        .dir-item {
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        }

        /* Enhanced hover effects for better Linux compatibility */
        .file-item:hover,
        .dir-item:hover,
        .file-item:focus,
        .dir-item:focus {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15), 0 0 0 3px rgba(102, 126, 234, 0.1);
            border-color: #667eea;
            background: rgba(255, 255, 255, 1);
        }

        /* Linux-specific fixes */
        @media screen and (-webkit-min-device-pixel-ratio: 0) {
            .file-item:hover, .dir-item:hover {
                -webkit-transform: translateY(-5px) scale(1.02);
                -webkit-box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            }
        }

        /* Firefox-specific fixes for Linux */
        @-moz-document url-prefix() {
            .file-item, .dir-item {
                transition: all 0.2s ease-in-out;
            }
            .file-item:hover, .dir-item:hover {
                transform: translateY(-4px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
                border: 2px solid #667eea;
            }
        }

        /* Active states for touch devices */
        .file-item:active,
        .dir-item:active {
            transform: translateY(-2px) scale(0.98);
            transition: all 0.1s ease-in-out;
        }

        /* Accessibility focus states */
        .file-item:focus-visible,
        .dir-item:focus-visible {
            outline: 3px solid #667eea;
            outline-offset: 2px;
        }
        .thumbnail {
            width: 100%;
            height: 120px;
            border-radius: 8px;
            margin-bottom: 10px;
            background: #f0f0f0;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        .thumbnail img {
            max-width: 100%;
            max-height: 100%;
            border-radius: 8px;
        }
        .file-icon, .dir-icon {
            font-size: 48px;
        }
        .dir-icon {
            font-size: 56px;
        }
        .file-name, .dir-name {
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
            word-break: break-word;
            font-size: 14px;
        }
        .file-info {
            font-size: 12px;
            color: #666;
            line-height: 1.4;
        }
        .no-files {
            text-align: center;
            color: #666;
            font-size: 1.2em;
            margin-top: 50px;
        }
        .svg-badge {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(102, 126, 234, 0.9);
            color: white;
            padding: 10px;
            border-radius: 8px;
            font-size: 12px;
        }
        @media (max-width: 768px) {
            .grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 15px;
            }
            .controls {
                flex-direction: column;
            }
            .controls input {
                min-width: 250px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🗂️ Przeglądarka plików SVG</h1>
        </div>

        <!-- Breadcrumb navigation -->
        <div class="breadcrumb">
            🏠 <a href="?dir=/">Root</a>';

    foreach ($breadcrumbs as $index => $crumb) {
        echo ' <span>/</span> <a href="?dir=' . urlencode($crumb['path']) . '">' . htmlspecialchars($crumb['name']) . '</a>';
    }

    echo '</div>

        <div class="controls">
            <form method="GET" style="display: flex; gap: 15px; align-items: center; flex-wrap: wrap;">
                <input type="text" name="dir" placeholder="Wprowadź ścieżkę do katalogu..." value="' . htmlspecialchars($directory) . '">
                <button type="submit">📁 Przejdź</button>
                <button type="button" onclick="window.history.back()">⬅️ Wstecz</button>
            </form>
        </div>';

    $totalItems = count($files) + count($directories);
    if ($totalItems > 0) {
        echo '<div class="stats">📊 Znaleziono <strong>' . count($directories) . '</strong> katalogów i <strong>' . count($files) . '</strong> plików</div>
              <div class="grid">';

        // Wyświetl katalogi
        foreach ($directories as $dir) {
            $displayName = htmlspecialchars($dir['name']);
            $dirPath = htmlspecialchars($dir['path']);
            echo '<div class="dir-item" onclick="navigateToDir(\'' . addslashes($dirPath) . '\')">
                    <div class="thumbnail">
                        <div class="dir-icon">' . ($dir['is_parent'] ? '⬆️' : '📁') . '</div>
                    </div>
                    <div class="dir-name">' . $displayName . '</div>
                    <div class="file-info">Katalog</div>
                  </div>';
        }

        // Wyświetl pliki
        foreach ($files as $file) {
            $fileName = htmlspecialchars($file['name']);
            $filePath = htmlspecialchars($file['path']);
            echo '<div class="file-item" onclick="openFile(\'' . addslashes($filePath) . '\')">
                    <div class="thumbnail">';

            if ($file['is_image']) {
                echo '<img src="' . $filePath . '" alt="' . $fileName . '" onerror="this.style.display=\'none\'; this.parentNode.innerHTML=\'<div class=\"file-icon\">' . $file['icon'] . '</div>\';"/>';
            } else {
                echo '<div class="file-icon">' . $file['icon'] . '</div>';
            }

            echo '</div>
                  <div class="file-name">' . $fileName . '</div>
                  <div class="file-info">
                      📏 ' . number_format($file['size'] / 1024, 1) . ' KB<br>
                      🕒 ' . date('d.m.Y H:i', $file['modified']) . '<br>
                      📎 ' . strtoupper($file['extension']) . '
                  </div>
                </div>';
        }

        echo '</div>';
    } else {
        echo '<div class="no-files">😞 Pusty katalog</div>';
    }

    echo '</div>
    <div class="svg-badge">📄 SVG Mode: Interactive</div>

    <script>
        function openFile(path) {
            const imageExtensions = ["jpg", "jpeg", "png", "gif", "bmp", "webp", "svg"];
            const extension = path.split(".").pop().toLowerCase();

            if (imageExtensions.includes(extension)) {
                window.open(path, "_blank");
            } else {
                const link = document.createElement("a");
                link.href = path;
                link.target = "_blank";
                link.click();
            }
        }

        function navigateToDir(path) {
            window.location.href = "?dir=" + encodeURIComponent(path);
        }

        // Obsługa drag and drop
        const container = document.querySelector(".container");

        container.addEventListener("dragover", function(e) {
            e.preventDefault();
            container.style.background = "rgba(255, 255, 255, 0.8)";
        });

        container.addEventListener("dragleave", function(e) {
            container.style.background = "rgba(255, 255, 255, 0.95)";
        });

        container.addEventListener("drop", function(e) {
            e.preventDefault();
            container.style.background = "rgba(255, 255, 255, 0.95)";
        });

        // Obsługa klawiatury
        document.addEventListener("keydown", function(e) {
            if (e.key === "Escape") {
                window.history.back();
            }
        });
    </script>
</body>
</html>';
    exit;
} else {
    // Tryb statyczny SVG
    header('Content-Type: image/svg+xml; charset=UTF-8');
}
?>